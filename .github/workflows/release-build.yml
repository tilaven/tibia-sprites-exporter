name: Release Build and Upload

on:
  push:
    tags:
      - 'v*'
  release:
    types: [published]

permissions:
  contents: write

jobs:
  build:
    name: Build for Windows, Linux, and macOS
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64]
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
      CGO_ENABLED: 0
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true

      - name: Show Go version
        run: go version

      - name: Build
        shell: bash
        run: |
          mkdir -p dist
          EXT=""
          if [ "${{ matrix.goos }}" = "windows" ]; then EXT=".exe"; fi
          BIN_NAME="tibia-sprites-exporter-${{ matrix.goos }}-${{ matrix.goarch }}$EXT"
          echo "Building $BIN_NAME"
          go build -trimpath -ldflags "-s -w" -o "dist/$BIN_NAME" ./src

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: tibia-sprites-exporter-${{ matrix.goos }}-${{ matrix.goarch }}
          path: dist/*
          if-no-files-found: error

  release:
    name: Create/Update GitHub Release and upload assets
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: tibia-sprites-exporter-*
          merge-multiple: true
          path: artifacts

      - name: Show downloaded files
        run: ls -lah artifacts

      - name: Create or update release and upload assets
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }}
          name: tibia-sprites-exporter ${{ github.ref_name }}
          allowUpdates: true
          generateReleaseNotes: true
          artifacts: "artifacts/*"
          replacesArtifacts: false
          token: ${{ secrets.GITHUB_TOKEN }}
